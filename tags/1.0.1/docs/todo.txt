
9 Oct 2009
- The use of the 'CacheManager' is a bit confusing.  this was included
  to further support http based properties, and guard against failure.
  What it does - its design goal - is to create a cache of the stream
  represented by and http based URL and save it as a local file.  Later, 
  if that http stream is not available, the CacheManager will use the
  most recent successful copy of the properties.  This is to support potential
  network issues due to the remote nature of the properties file.
   - This could be confusing to people reading the code. 
   - Should be able to locally disable that feature on an include url:
     [http://jmatrix.net/test.properties|cache=false]
   - Shoudl be able to globally disable the caching feature.
   - should heavily document code using the Cache manager.

- Update javadoc whereever possible.


1) Substitution to support Objects as well as strings.  

Syntax Example: 
env={
   dev={
      host=bs00dev.dal0
   }
   test={
      host=bs00test.dal0
   }
}

envprops=${env->dev}

Here, the ${env->dev} resolves to a properties object, not to a String.  
That is the point, that syntax is intuitive, and should be allowed.


2) Vectors based on inclusion

Syntax Example: 

sql=([filea.sql], [fileb.sql])

Again, syntax is intuitive.

3) Better support for remote properties
   - Add support for JDBC based includes.
   - Support configurable timeouts for remote properteis.
   DONE: - Support local caching and fallback on remote timeout.
  
  