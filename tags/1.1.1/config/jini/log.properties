#
# Properties for JDK14LogConfig
#

log.package="jini.util"

# JDK logging levels include:
#   SEVERE (1000), WARNING(900), INFO(800), CONFIG(700), 
#   FINE(500), FINER(400), FINEST(300)
#   OFF (Inegger.MAX_VALUE), ALL (Integer.MIN_VALUE)
#
# JINI Ref Implementation adds:
#    HANDLED(550), FAILED(600)
loggers= {
	.={
		# This is a 'global' setting - turning it up can give some 
		# verbose info.
		level=INFO
		
		handlers= {
			console={
				class="${log.package}.JDK14LogConfig$ConsoleHandler"
				level="ALL"
				formatter={
					class="${log.package}.JDK14LogConfig$LogFormatter"
					
					# Can be [true|false]
					short.class.names=true
				}
				
				# this is ignoring Jini HANDLED level - where it catches
				# exceptions, and correctly handles them.  This is not very 
				# interesting stuff - a bunch of big stack traces
				# jini HANDLED == 550
				filter={
					class="${log.package}.JDK14LogConfig$LogFilter"
					filter.levels=("550")
				}
			}
		}
	}
	
	jini={
		level=FINE
	}
	
	com.sun.jini={
		level=INFO
	}
	net.jini={
		level=CONFIG
	}
}
